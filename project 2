.data
    data: .space 1001
    output: .asciiz "\n"
    notvalid: .asciiz "Invalid input"
.text

main:
  #asks for input and stores it

    li $v0, 8
    la $a0, data
    li $a1, 1001
    syscall
    jal begin
    j finish
begin:
la $t0,data
    add $t0,$t0,$t1
    lb $s0, ($t0)
    beq $s0, 0, convert
    beq $s0, 9, skip
    beq $s0, 32, skip
    move $t6, $t1
    j doing

skip:
 # skips passed spaces in the string
    addi $t1, $t1,1
    j begin
doing:
   # checks the rest of the characters after passing the first
    li $t7, -1
    la $t0,data
    add $t0,$t0,$t1
    lb $s0, ($t0)
    bge $t2, 5, invalid
    bge $t3, 1, invalid
    j check
check:
   # checks the asziic values
    beq $s0, 0, convert
    ble $s0, 47, special
    ble $s0, 57, integer
    ble $s0, 85, capital
    ble $s0, 117, lowercase
    bge $s0, 118, special
special:
# checks for special characters
    addi $t1,$t1, 1
    beq $s0, 9,  gap
    beq $s0, 32, gap
    beq $s0, 10, convert
    j invalid
gap:
    #checks to see for spaces 
    addi $t3,$t3, -1
    j doing            
integer:
  # checks to see for integers
    ble $s0, 47, special
    addi $t1, $t1, 1
    addi $t2, $t2, 1    
    
    li $t5, 48
    sub $s0, $s0, $t5
    #add $s1, $s1, $s0
    mul $t3, $t3, $t7
    j during
capital:
# checks to see for capitals
    ble $s0, 64, special
    addi $t1, $t1, 1
    addi $t2, $t2, 1
    
    li $t5, 55
    sub $s0, $s0, $t5
    #add $s1, $s1, $s0
    mul $t3, $t3, $t7
  j doing
lowercase:
#checks to see for lowercases
    ble $s0, 96, special
    addi $t1, $t1, 1
    addi $t2, $t2, 1    
    
    li $t5, 87
    sub $s0, $s0, $t5
    #add $s1, $s1, $s0
    mul $t3, $t3, $t7
    j doing    

convert:
# converts string info
    la $t0, data
    add $t0,$t0,$t6
    lb $s0, ($t0)
    addi $t2,$t2, -1
    addi $t6, $t6, 1
    blt $t2,0,done
    move $t8, $t2
    j sort
sort:
#sorts out string info
    ble $s0, 57, num
    ble $s0, 84, upper
    ble $s0, 116, lower

num:
#sorts through numbers
    li $t5, 48
    sub $s0, $s0, $t5
    li $t9, 1
    beq $t2, 0, combine
    li $t9, 31
    j exp
upper:
#sorts through upper
    li $t5, 55
    sub $s0, $s0, $t5
    li $t9, 1
    beq $t2, 0, combine
    li $t9, 31
    j exp
lower:
#sorts through lower
    li $t5, 87
    sub $s0, $s0, $t5
    li $t9, 1
    beq $t2, 0, combine
    li $t9, 31
    j exp
exp:
#Sorts through exponent
    ble $t8, 1, combine
    mul $t9, $t9, 31 
    addi $t8, $t8, -1
    j exp
combine:
    mul $s2, $t9, $s0
    add $s1, $s1, $s2
    #move $t4, $t9
    li $t9, 1
    #j finish
    j convert
    
done: jr $ra    
